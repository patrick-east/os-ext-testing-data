script-dir: /etc/nodepool/scripts

dburi: 'mysql://nodepool:<%= mysql_password %>@localhost/nodepool'

cron:
  cleanup: '30 */2 * * *'
  check: '*/15 * * * *'
  image-update: '0 10 * * *'

zmq-publishers:
  - tcp://localhost:8888

gearman-servers:
  - host: <%= gearman_server %>

labels:
  - name: devstack-trusty-check
    image: devstack-trusty-check
    min-ready: 2
    providers:
      - name: cinder-diste41


providers:
  - name: cinder-diste41
    username: '<%= provider_username %>'
    password: '<%= provider_password %>'
    auth-url: 'http://cinder-diste41.dev.purestorage.com:5000/v2.0'
    project-id: 'jenkins'
    max-servers: 6
    #This keypair is used to create the image and should be found in the cloud keypairs.
    #The public/private parts of this keypair need to be in the user who's running nodepool ~/.ssh/id_rsa
    #You can then login to vm's e.g. ubuntu username using this
    keypair: jenkins
    pool: public
    networks:
      - net-id: 135b0b08-d53b-4498-9c04-c347d67471fc
    images:
      - name: devstack-trusty-check
        # This is the image name to use found in this provider's `glance image-list`
        base-image: '<%= provider_image_name %>'
        min-ram: 8192
        name-filter: devstack-node
        # This is the script that will be used to prepare the image
        setup: <%= provider_image_setup_script_name %>
        #Set the public key part only of the jenkin's key (no whitespace) to the NODEPOOL_SSH_KEY environment variable in order to
        #inject it into the image's jenkins user .ssh/authorized_keys
        #This key will be used to log in and setup jenkins on the target VM
        private-key: /home/nodepool/.ssh/id_rsa
        username: jenkins

targets:
  - name: local-jenkins
    jenkins:
      url: 'http://localhost:8080/'
      user: '<%= jenkins_api_user %>'
      apikey: '<%= jenkins_api_key %>'
      credentials-id: '<%= jenkins_credentials_id %>'
